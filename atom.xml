<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://iskoi.github.io</id>
    <title>Koi的学习之路</title>
    <subtitle></subtitle>
    <icon>https://iskoi.github.io/assets/favicon.ico</icon>
    <link href="https://iskoi.github.io" />
    <author>
      <name>Koi</name>
    </author>
    <updated>2023-03-22T16:00:00.000Z</updated>
    <entry>
        <id>https://iskoi.github.io/reverseEngineering/pyinstaller/pyinstaller1/</id>
        <title>逆向实战-反编译Pyinstaller打包的exe并进行功能分析</title>
        <link rel="alternate" href="https://iskoi.github.io/reverseEngineering/pyinstaller/pyinstaller1/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;最近接触到一个程序，大概功能就是用激活码安装游戏，有点好奇想看看怎么实现的&lt;/p&gt;
&lt;h1 id=&#34;一-查壳脱壳&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-查壳脱壳&#34;&gt;#&lt;/a&gt; 一、查壳脱壳&lt;/h1&gt;
&lt;p&gt;使用 &lt;code&gt;Detect It Easy&lt;/code&gt;  进行查壳&lt;/p&gt;
&lt;p&gt;原来是用 &lt;code&gt;PyInstaller&lt;/code&gt;  打包的，那就简单点，上反编译&lt;/p&gt;
&lt;h1 id=&#34;二-反编译&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-反编译&#34;&gt;#&lt;/a&gt; 二、反编译&lt;/h1&gt;
&lt;p&gt;先使用 &lt;code&gt;PyInstaller Extractor&lt;/code&gt;  工具解包&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/xxx&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;python &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\pyinstxtractor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Processing &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Pyinstaller version: 2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;1+&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Python version: 3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;10&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Length of package: 29268660 bytes&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Found 138 files in CArchive&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Beginning extraction&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;please standby&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Possible entry point: pyiboot01_bootstrap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Possible entry point: pyi_rth_inspect&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Possible entry point: pyi_rth_pyqt5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Possible entry point: pyi_rth_pkgutil&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Possible entry point: pyi_rth_multiprocessing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Possible entry point: main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Found 279 files in PYZ archive&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; Successfully extracted pyinstaller archive: &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;You can now use a python decompiler on the pyc files within the extracted directory&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;新版 &lt;code&gt;PyInstaller Extractor&lt;/code&gt;  会自动对 &lt;code&gt;pyc&lt;/code&gt;  文件添加 &lt;code&gt;magic head&lt;/code&gt; ，所以这里我们不用手动修改，也可以检查一下以防万一&lt;br /&gt;
然后安装 &lt;code&gt;uncompyle6&lt;/code&gt;  反编译 &lt;code&gt;pyc&lt;/code&gt;  文件&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/xxx&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip install uncompyle6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cd &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;\xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe_extracted\&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/xxx/xxx.exe_extracted&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uncompyle6 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;o main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Unsupported Python version&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;10&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; decompilation&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Unsupported bytecode in file main.pyc&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Unsupported Python version, 3.10.0, for decompilation&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; decompiled 0 files: 0 okay&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 0 failed&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;uncompyle6&lt;/code&gt;  不支持 &lt;code&gt;Python310&lt;/code&gt; ，那试试 &lt;code&gt;pycdc&lt;/code&gt;  反编译工具&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/xxx/xxx.exe_extracted&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pycdc main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyc &gt;main&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Unsupported opcode: JUMP_IF_NOT_EXC_MATCH&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;JUMP_IF_NOT_EXC_MATCH&lt;/code&gt;  是最近刚添加的字节码， &lt;code&gt;pycdc&lt;/code&gt;  尚未进行适配，因此生成的源码是不完整的，可以用 &lt;code&gt;pycdas&lt;/code&gt;  反汇编，结合 &lt;code&gt;main.py&lt;/code&gt;  来进行分析&lt;br /&gt;
但是呢， &lt;code&gt;JUMP_IF_NOT_EXC_MATCH&lt;/code&gt;  字节码与 &lt;code&gt;try...except&lt;/code&gt;  异常处理相关，我的目标是功能分析，所以要看的是正常无报错的代码，所以我们可以忽略这个错误&lt;br /&gt;
不过因为  &lt;code&gt;pycdc&lt;/code&gt;  报错后会中断跳过当前函数，所以要对 &lt;code&gt;pycdc&lt;/code&gt;  进行修改&lt;br /&gt;
打开 &lt;code&gt;pycdc&lt;/code&gt;  的 &lt;code&gt;Github&lt;/code&gt;  仓库利用 &lt;code&gt;Github&lt;/code&gt;  的搜索功能，搜索 &lt;code&gt;Unsupported opcode&lt;/code&gt; ，搜索到关键代码在 &lt;code&gt;ASTree.cpp&lt;/code&gt;  当中&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;figcaption data-lang=&#34;C++&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; Pyc&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;YIELD_VALUE&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                PycRef&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;ASTNode&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                curblock&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ASTReturn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ASTReturn&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;YIELD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; Pyc&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;SETUP_ANNOTATIONS&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            variable_annotations &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; Pyc&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;PRECALL_A&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; Pyc&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;RESUME_A&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;/* We just entirely ignore this / no-op */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; Pyc&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;CACHE&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;/* These &#34;fake&#34; opcodes are used as placeholders for optimizing&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               certain opcodes in Python 3.11+.  Since we have no need for&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               that during disassembly/decompilation, we can just treat these&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               as no-ops. */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; Pyc&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;PUSH_NULL&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;nullptr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Unsupported opcode: %s\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Pyc&lt;/span&gt;&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;OpcodeName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;opcode &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0xFF&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cleanBuild &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ASTNodeList&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;defblock&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里用了&lt;span class=&#34;blue&#34;&gt; swtich...case...default&lt;/span&gt; 语法，当 &lt;code&gt;switch&lt;/code&gt;  的值与所有的 &lt;code&gt;case&lt;/code&gt;  的值不相等时，就会运行 &lt;code&gt;default&lt;/code&gt;  语句，所以这里我们要修改 &lt;code&gt;default&lt;/code&gt;  之后的代码 &lt;code&gt;fprintf&lt;/code&gt;  除外全部注释掉，然后让 &lt;code&gt;opcode&lt;/code&gt;  出栈，从上下文分析可以发现 &lt;code&gt;opcode&lt;/code&gt;  是存在 &lt;code&gt;stack&lt;/code&gt;  里的，在 &lt;code&gt;fprintf&lt;/code&gt;  的下一行写入&lt;span class=&#34;blue&#34;&gt; stack.pop ();&lt;/span&gt; 重新编译得到 &lt;code&gt;pycdc.exe&lt;/code&gt; ，重命名为 &lt;code&gt;pycdc1.exe&lt;/code&gt;  和原版 &lt;code&gt;pycdc&lt;/code&gt;  区分开，方便以后调用&lt;br /&gt;
使用 &lt;code&gt;pycdc1&lt;/code&gt;  对 &lt;code&gt;main.pyc&lt;/code&gt;  反编译，并找到关键函数&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;on_click_act&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;button clicked.&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lineEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; code &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                msg_box &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Critical&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\xe9\x94\x99\xe8\xaf\xaf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe6\xbf\x80\xe6\xb4\xbb\xe7\xa0\x81&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                msg_box&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lineEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setEnabled&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pushButton&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setText&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\xe6\xbf\x80\xe6\xb4\xbb\xe4\xb8\xad&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pushButton_2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setText&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\xe4\xbf\xae\xe5\xa4\x8d\xe9\x94\x99\xe8\xaf\xaf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pushButton&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setEnabled&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pushButton_2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setEnabled&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;work_thread &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; WorkThread&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;work_thread&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;trigger&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;after_process&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;work_thread&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; setText &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Error&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;找到 &lt;code&gt;on_click_act&lt;/code&gt;  函数，从函数名和代码可以明显看出，这是按下按钮后执行的函数，首先判断 &lt;code&gt;code&lt;/code&gt;  是否为空，是则弹出窗口提示 &amp;quot;请输入激活码&amp;quot;，所以 &lt;code&gt;code&lt;/code&gt;  就是激活码，接下来就是更新按钮和输入框的状态，然后调用 &lt;code&gt;WorkThread&lt;/code&gt;  函数&lt;br /&gt;
从 &lt;code&gt;PYZ-00.pyz_extracted&lt;/code&gt;  文件夹找到 &lt;code&gt;work_thread.pyc&lt;/code&gt; ，用 &lt;code&gt;pycdc1&lt;/code&gt;  反编译，仍然有&lt;span class=&#34;pink&#34;&gt; Unsupported opcode: JUMP_IF_NOT_EXC_MATCH&lt;/span&gt; 报错，不管它，直接看代码&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;WorkThread&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;WorkThread&#39;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    trigger &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QtCore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyqtSignal&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; parent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;WorkThread&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        temp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; main_process&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;trigger&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;emit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;temp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    __classcell__ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;WorkThread &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;NODE&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;WorkThread&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;WorkThread&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; QtCore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QThread&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main_process&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;query_game&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; result &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        depot_id_list &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close_xxx&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;manifest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            depot_id_list &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;generate_manifest_vdf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;appid&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;manifest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;generate_applist&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;appid&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;dlcid&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; depot_id_list&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_user32&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;code_add_1&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;exe_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;code_add_1&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;family_sharing_code&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; code&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;delete_code&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;start_xxx&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        xxxcore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;generate_shortcut&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;appid&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name_cn&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在主函数里，调用 &lt;code&gt;main_process&lt;/code&gt;  函数并传递了 &lt;code&gt;code&lt;/code&gt; ，在 &lt;code&gt;main_process&lt;/code&gt;  函数声明 &lt;code&gt;result&lt;/code&gt;  变量的值为 &lt;code&gt;xxxcore.query_game(code)&lt;/code&gt; ，看来  &lt;code&gt;xxxcore&lt;/code&gt;  就是我们要找的&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;query_game&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; get_connection&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cursor &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cursor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT game_info.appid,dlcid,name_cn,url,exe_name,family_sharing_code,manifest FROM activation_code INNER JOIN game_info ON activation_code.appid = game_info.appid WHERE code = &#39;%s&#39;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cursor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;execute&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        results &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cursor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fetchall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; results &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; results&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;appid&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;dlcid&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name_cn&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;exe_name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;family_sharing_code&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;manifest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\xe7\xbd\x91\xe7\xbb\x9c\xe9\x94\x99\xe8\xaf\xaf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; e   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; e&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;因为报错，后面的代码变得诡异，没关系，这不是关键代码&lt;br /&gt;
可以看到这个函数就是从 &lt;code&gt;mysql&lt;/code&gt;  取出与游戏有关的信息，解读 &lt;code&gt;sql&lt;/code&gt;  命令，查找 &lt;code&gt;dlcid&lt;/code&gt; ,  &lt;code&gt;appid&lt;/code&gt;  等数据，并且要满足 &lt;code&gt;game_info.appid&lt;/code&gt;  和  &lt;code&gt;activation_code.appid&lt;/code&gt;  相等，以及 &lt;code&gt;activation_code.code&lt;/code&gt;  等于输入的 &lt;code&gt;code&lt;/code&gt;  的条件&lt;br /&gt;
这里就省略看代码的过程，直接概括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 /config/config.vdf 的 &lt;code&gt;depot&lt;/code&gt;  元素添加用于解密 &lt;code&gt;manifest&lt;/code&gt;  的 &lt;code&gt;key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;获取作者在腾讯云存储的 &lt;code&gt;manifest&lt;/code&gt;  文件，添加到 /depotcache/ 下&lt;/li&gt;
&lt;li&gt;获取 User32.dll (同上)，存放在程序根目录&lt;/li&gt;
&lt;li&gt;修改 /xxx.cfg 添加 &lt;code&gt;BootStrapperInhibitAll=enable&lt;/code&gt; ，查了一下，这个参数用来阻止自动更新&lt;/li&gt;
&lt;li&gt;如果存在 /hid.dll，就删除&lt;/li&gt;
&lt;li&gt;删除 /appcache/ 下的所有文件，清除 &lt;code&gt;app&lt;/code&gt;  缓存，可能是为了刷新仓库界面&lt;/li&gt;
&lt;li&gt;在 / Applist / 下 (如果没有就创建) 添加 &lt;code&gt;txt&lt;/code&gt;  文件，文件名是有序的数字，如 &amp;quot;0.txt&amp;quot;,&amp;quot;1.txt&amp;quot;,&amp;quot;3.txt&amp;quot;，文件内容为 &lt;code&gt;appid&lt;/code&gt; 、 &lt;code&gt;dlcid&lt;/code&gt; 、 &lt;code&gt;manifest&lt;/code&gt; ，一个文件只写一个 &lt;code&gt;id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="软件逆向工程" scheme="https://iskoi.github.io/categories/reverseEngineering/" />
        <category term="逆向" scheme="https://iskoi.github.io/tags/%E9%80%86%E5%90%91/" />
        <category term="pyinstaller" scheme="https://iskoi.github.io/tags/pyinstaller/" />
        <category term="python" scheme="https://iskoi.github.io/tags/python/" />
        <updated>2023-03-22T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://iskoi.github.io/Programming/cmake/cmake/</id>
        <title>Cmake安装与使用</title>
        <link rel="alternate" href="https://iskoi.github.io/Programming/cmake/cmake/"/>
        <content type="html">&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://cmake.org/download/&#34;&gt;官方下载地址&lt;/a&gt;&lt;br /&gt;
根据自己系统和架构下载对应的包&lt;/p&gt;
&lt;p&gt;选择&lt;span class=&#34;pink&#34;&gt; Add CMake to the system PATH for the current user&lt;/span&gt;，意思是只添加到用户环境变量，另一个就是添加到系统环境变量&lt;/p&gt;
&lt;p&gt;安装完成后，打开 &lt;code&gt;cmd&lt;/code&gt;  或者 &lt;code&gt;Powershell&lt;/code&gt; , 输入命令&lt;span class=&#34;blue&#34;&gt; cmake --version&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;span&gt;D:/Koi/cmake&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cmake &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;version&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cmake version 3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;26&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;CMake suite maintained and supported by Kitware &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;kitware&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com/cmake&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如上，没有报错即安装成功&lt;/p&gt;
&lt;h1 id=&#34;使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用&#34;&gt;#&lt;/a&gt; 使用&lt;/h1&gt;
&lt;p&gt;这里用 &lt;code&gt;Pycdc&lt;/code&gt;  作为示例&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;span&gt;l&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;git clone https:&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;github&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com/zrax/pycdc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cd pycdc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/pycdc&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cmake &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;MSBuild pycdc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sln&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里遇到几个坑，首先是输入&lt;span class=&#34;blue&#34;&gt; cmake .&lt;/span&gt; 后显示&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;span&gt;l&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/pycdc&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;CMake Warning &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dev&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; at CMakeLists&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt:1 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cmake_minimum_required&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; should be called prior to this top-level project&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  call&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;  Please see the cmake-commands&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;7&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; manual &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; usage documentation of&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  both commands&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;This warning is &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; project developers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;  Use &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Wno-dev to suppress it&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;意思是 &lt;code&gt;cmake_minimum_required&lt;/code&gt;  函数不能在 &lt;code&gt;Project&lt;/code&gt;  函数之后，编辑 CMakeLists.txt 将 &lt;code&gt;cmake_minimum_required&lt;/code&gt;  改到第一行即可&lt;br /&gt;
第二个是找不到 &lt;code&gt;Visual Studio&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/pycdc&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;CMake Error at CMakeLists&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt:3 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;project&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  Generator&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    Visual Studio 17 2022&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  could not find any instance of Visual Studio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Configuring incomplete&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; errors occurred!&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;打开 &lt;code&gt;Visual Studio Installer&lt;/code&gt; ，点击右边的修改按钮&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;C++&lt;/code&gt;  的桌面开发 和 &lt;code&gt;Visual Studio&lt;/code&gt;  扩展开发 和 单个组件 中有关 &lt;code&gt;Cmake&lt;/code&gt;  的都要选中&lt;/p&gt;
&lt;p&gt;也有人说要有 &lt;code&gt;VS17COMNTOOLS&lt;/code&gt; VisualStudio 安装路径 \2022\Community\Common7\Tools 环境变量，但是这里我没有这个环境变量也可以正常编译，看个人情况吧&lt;br /&gt;
重新执行&lt;span class=&#34;blue&#34;&gt; cmake .&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;D:/Koi/pycdc&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cmake &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Building &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;: Visual Studio 17 2022&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Selecting Windows SDK version 10&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;22000&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;0 to target Windows 10&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;19045&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; The C compiler identification is MSVC 19&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;35&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;32216&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; The CXX compiler identification is MSVC 19&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;35&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;32216&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting C compiler ABI info&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting C compiler ABI info &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; done&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Check &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; working C compiler: D:&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;35&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;32215/bin/Hostx64/x64/cl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; skipped&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting C compile features&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting C compile features &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; done&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting CXX compiler ABI info&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting CXX compiler ABI info &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; done&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Check &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; working CXX compiler: D:&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;35&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;32215/bin/Hostx64/x64/cl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; skipped&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting CXX compile features&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Detecting CXX compile features &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; done&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Found PythonInterp: C:&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;Users/Koi/AppData/Local/Programs/Python/Python310/python&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;found version &lt;span class=&#34;token string&#34;&gt;&#34;3.10.7&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Configuring done &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;6s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Generating done &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;1s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; Build files have been written to: D:&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;Koi/pycdc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;MSBuild pycdc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sln&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;MSBuild version 17&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;1+f6fdcf537 &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;NET Framework&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;在此解决方案中一次生成一个项目。若要启用并行生成，请添加&lt;span class=&#34;token string&#34;&gt;&#34;-m&#34;&lt;/span&gt;开关。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;略&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;已完成生成项目“D:\Koi\pycdc\ALL_BUILD&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vcxproj”&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;默认目标&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;的操作。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;已完成生成项目“D:\Koi\pycdc\ALL_BUILD&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;vcxproj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;metaproj”&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;默认目标&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;的操作。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;已完成生成项目“D:\Koi\pycdc\pycdc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sln”&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;默认目标&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;的操作。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;已成功生成。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    0 个警告&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    0 个错误&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td data-command=&#34;&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;已用时间 00:00:09&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;86&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;编译成功无报错&lt;/p&gt;
</content>
        <category term="计算机程序设计" scheme="https://iskoi.github.io/categories/Programming/" />
        <category term="Cmake" scheme="https://iskoi.github.io/tags/Cmake/" />
        <category term="编译" scheme="https://iskoi.github.io/tags/%E7%BC%96%E8%AF%91/" />
        <updated>2023-03-09T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://iskoi.github.io/Programming/datastructureAlgorithms/datastructure3/datastructure3/</id>
        <title>数据结构【逻辑结构篇】</title>
        <link rel="alternate" href="https://iskoi.github.io/Programming/datastructureAlgorithms/datastructure3/datastructure3/"/>
        <content type="html">&lt;h1 id=&#34;栈&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#栈&#34;&gt;#&lt;/a&gt; 栈&lt;/h1&gt;
&lt;p&gt;栈是线性数据结构，元素在其中只能先进后出，就像一端封闭一端开放的圆筒形容器&lt;br /&gt;
最早进入的元素叫做栈底 &lt;code&gt;bottom&lt;/code&gt; ，最后的元素叫做栈顶 &lt;code&gt;top&lt;/code&gt; &lt;br /&gt;
 只有栈顶才能入栈 &lt;code&gt;push&lt;/code&gt; 、出栈 &lt;code&gt;pop&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;栈的输出顺序与输入顺序相反，适合用于回溯，例如递归操作返回上一级递归、面包屑导航&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://s2.loli.net/2024/12/05/ey896rswNlhfuMj.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;队列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#队列&#34;&gt;#&lt;/a&gt; 队列&lt;/h1&gt;
&lt;p&gt;队列也是线性数据结构，元素在其中只能先入先出，就像现实中的隧道&lt;br /&gt;
队列的出口端叫做队头 &lt;code&gt;front&lt;/code&gt; ，入口端叫队尾 &lt;code&gt;rear&lt;/code&gt; ，队尾指针指向的位置必须空出一位&lt;br /&gt;
元素只能在队尾入队 &lt;code&gt;enqueue&lt;/code&gt; 、队头出队 &lt;code&gt;dequeue&lt;/code&gt;  时间复杂度&lt;span class=&#34;pink&#34;&gt; O (1)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;循环队列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#循环队列&#34;&gt;#&lt;/a&gt; 循环队列&lt;/h2&gt;
&lt;p&gt;当队列使用数组实现时，不断进行入、出队操作，就会面临空间不足的情况，循环队列可以解决这个问题，并且不用扩容数组&lt;br /&gt;
只需将队尾放到数组的首位，重新利用先前出队的空间&lt;br /&gt;
当&lt;span class=&#34;pink&#34;&gt; (队尾下标 + 1) % 数组长度 = 队头下标&lt;/span&gt;时，说明队列已满&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://s2.loli.net/2024/12/05/XIUA7SBrW9VNlCo.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;双端队列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双端队列&#34;&gt;#&lt;/a&gt; 双端队列&lt;/h2&gt;
&lt;h2 id=&#34;优先队列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优先队列&#34;&gt;#&lt;/a&gt; 优先队列&lt;/h2&gt;
&lt;h2 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;队列的输出顺序和输入顺序相同，经常用于现实中的排队系统&lt;/p&gt;
&lt;h1 id=&#34;散列表-哈希表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#散列表-哈希表&#34;&gt;#&lt;/a&gt; 散列表 (哈希表)&lt;/h1&gt;
&lt;p&gt;散列表是 &lt;code&gt;hash&lt;/code&gt;  结构，由 &lt;code&gt;Key&lt;/code&gt;  和 &lt;code&gt;Value&lt;/code&gt;  组成，通过对 &lt;code&gt;Key&lt;/code&gt;  进行 &lt;code&gt;hash&lt;/code&gt;  计算出 &lt;code&gt;Value&lt;/code&gt;  在数组中的下标位置&lt;br /&gt;
&lt;span class=&#34;pink&#34;&gt; index = HashCode (Key) % Array.length&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;哈希冲突&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#哈希冲突&#34;&gt;#&lt;/a&gt; 哈希冲突&lt;/h2&gt;
&lt;p&gt;由于数组的长度是有限的，就会有 &lt;code&gt;hash&lt;/code&gt;  冲突的情况，主要有两种方法解决这种问题&lt;/p&gt;
&lt;p&gt;开放寻址法：当写入的位置已经有元素时，往后寻找空位写入&lt;br /&gt;
链表法：每一个元素都是一个链表的头节点，只需要用 &lt;code&gt;next&lt;/code&gt;  指针指向要被写入的冲突的元素即可（ &lt;code&gt;HashMap&lt;/code&gt;  应用了此方法）&lt;/p&gt;
&lt;h2 id=&#34;扩容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩容&#34;&gt;#&lt;/a&gt; 扩容&lt;/h2&gt;
&lt;p&gt;既然使用数组实现，那么就会涉及到扩容问题，虽然链表法可以一直往下延伸，但这会大大影响效率，在 &lt;code&gt;HashMap&lt;/code&gt;  中判断需要扩容的条件是&lt;span class=&#34;pink&#34;&gt; HashMap.Size &amp;gt;= Capacity*LoadFactor&lt;/span&gt;， &lt;code&gt;Capacity&lt;/code&gt;  指 &lt;code&gt;HashMap&lt;/code&gt;  当前长度， &lt;code&gt;LoadFactor&lt;/code&gt;  指 &lt;code&gt;HashMap&lt;/code&gt;  的负载因子，默认为&lt;span class=&#34;pink&#34;&gt; 0.75f&lt;/span&gt; 和数组扩容一样，先创建原数组两倍的新数组，不过要重新进行 &lt;code&gt;hash&lt;/code&gt;  计算，因为数组长度发生了变化，先前计算得出的下标已经不再适用于新数组&lt;/p&gt;
&lt;h1 id=&#34;树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#树&#34;&gt;#&lt;/a&gt; 树&lt;/h1&gt;
&lt;p&gt;树 &lt;code&gt;tree&lt;/code&gt;  是&lt;span class=&#34;pink&#34;&gt; n (n&amp;gt;=0)&lt;/span&gt; 个节点的有限集。当&lt;span class=&#34;pink&#34;&gt; n=0&lt;/span&gt; 时，称为空树&lt;br /&gt;
非空树有以下特点：&lt;/p&gt;
&lt;p&gt;有且仅有一个称为根的节点 &lt;code&gt;root&lt;/code&gt; &lt;br /&gt;
 当&lt;span class=&#34;pink&#34;&gt; n&amp;gt;1&lt;/span&gt; 时，其余节点可分为&lt;span class=&#34;pink&#34;&gt; m (m&amp;gt;0)&lt;/span&gt; 个互不相交的有限集，每一个集合本身又是一个树，并称为根的子树&lt;br /&gt;
没有孩子的节点是树的末端，称做叶子节点 &lt;code&gt;leaf&lt;/code&gt; &lt;br /&gt;
 一个节点的上一级节点，是这个节点的父节点 &lt;code&gt;parent&lt;/code&gt; ，从这个节点衍生出来的节点，是这个节点的孩子节点 &lt;code&gt;child&lt;/code&gt; ，和这个节点同级，同一个父节点衍生出来的节点是这个节点的兄弟节点 &lt;code&gt;sibling&lt;/code&gt; &lt;br /&gt;
 树的最大层级数，称为树的高度和深度&lt;/p&gt;
&lt;h2 id=&#34;二叉树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二叉树&#34;&gt;#&lt;/a&gt; 二叉树&lt;/h2&gt;
&lt;p&gt;二叉树中的每一个节点最多能有两个孩子节点，也可以只有一个，或者没有。一个叫做左孩子 &lt;code&gt;leftChild&lt;/code&gt; ，一个叫做右孩子 &lt;code&gt;rightChild&lt;/code&gt; ，它们的顺序是固定和，如同名字一样&lt;/p&gt;
&lt;p&gt;满二叉树：一个二叉树的每一个非叶子节点都有两个孩子节点，并且所有叶子节点都在同一层级&lt;br /&gt;
完全二叉树：完全二叉树的所有节点和同样高度的满二叉树的节点位置相同，仅要求最后一个节点之前的节点满分支即可&lt;/p&gt;
</content>
        <category term="计算机程序设计" scheme="https://iskoi.github.io/categories/Programming/" />
        <category term="数据结构与算法" scheme="https://iskoi.github.io/categories/Programming/datastructureAlgorithms/" />
        <category term="数据结构" scheme="https://iskoi.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" />
        <updated>2023-02-18T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://iskoi.github.io/Programming/datastructureAlgorithms/datastructure2/datastructure2/</id>
        <title>数据结构【物理结构篇】</title>
        <link rel="alternate" href="https://iskoi.github.io/Programming/datastructureAlgorithms/datastructure2/datastructure2/"/>
        <content type="html">&lt;h1 id=&#34;数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组&#34;&gt;#&lt;/a&gt; 数组&lt;/h1&gt;
&lt;p&gt;数组在内存中是按顺序存储的，数组内每个元素都有一个单独的下标，在查找元素时只需要给出对应的下标即可，下标就是一个数字，从第一个元素为 0 逐次增加，这叫随机读取，读取的时间复杂度只有&lt;span class=&#34;pink&#34;&gt; O (1)&lt;/span&gt;&lt;br /&gt;
 数组的长度在创建数组的时候就固定了，所以当长度不够时就只能再创建一个更长的数组再将元素一个个复制过去（Java 是这样的，在 JavaScript 中是动态的可随意增减）扩容的时间复杂度是&lt;span class=&#34;pink&#34;&gt; O (n)&lt;/span&gt;&lt;br /&gt;
 由于每个元素是固定下标，所以在数组中作中间插入的操作是繁琐的，需要把要插入的位置的元素包括在这之后的元素一个个往后移，中间删除操作往前移，时间复杂度都是&lt;span class=&#34;pink&#34;&gt; O (n)&lt;/span&gt;&lt;br /&gt;
 如果没有顺序要求，中间删除操作可以将最后一个元素复制到要删除元素的位置，然后删除最后一个元素，这样时间复杂度只有&lt;span class=&#34;pink&#34;&gt; O (2)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;数组的随机读取能力强但插入、删除能力会导致大量元素移动，因此数组适合在读操作多，写操作少的情况使用&lt;/p&gt;
&lt;h1 id=&#34;链表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链表&#34;&gt;#&lt;/a&gt; 链表&lt;/h1&gt;
&lt;h2 id=&#34;单向链表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#单向链表&#34;&gt;#&lt;/a&gt; 单向链表&lt;/h2&gt;
&lt;p&gt;每一个节点由 &lt;code&gt;data&lt;/code&gt; 、 &lt;code&gt;next&lt;/code&gt;  组成， &lt;code&gt;data&lt;/code&gt;  为存储的数据， &lt;code&gt;next&lt;/code&gt;  指向下一个节点，头节点为 &lt;code&gt;head&lt;/code&gt; ，尾部节点为 &lt;code&gt;last&lt;/code&gt;  且 &lt;code&gt;next&lt;/code&gt;  指向 &lt;code&gt;null&lt;/code&gt; ，因此只能做向下读取的操作&lt;br /&gt;
链表是随机存储的 (所以需要指针)，在做查找的操作时只能一个一个节点往下找，时间复杂度为 [O (n)].{pink}，但它的长度是动态的&lt;br /&gt;
头部插入：将新节点的 &lt;code&gt;next&lt;/code&gt;  指向第一个节点，然后更新 &lt;code&gt;head&lt;/code&gt;  为新节点&lt;br /&gt;
中间插入：将新节点的 &lt;code&gt;next&lt;/code&gt;  指向下一个节点，将上一个节点的 &lt;code&gt;next&lt;/code&gt;  指向新节点&lt;br /&gt;
头部删除：将 &lt;code&gt;head&lt;/code&gt;  更新为第二个节点（Java 特性会删除未被使用的数据）&lt;br /&gt;
中间删除：将上一个节点的 &lt;code&gt;next&lt;/code&gt;  指向下一个节点&lt;br /&gt;
尾部删除：将倒数第二个节点的 &lt;code&gt;next&lt;/code&gt;  指向 &lt;code&gt;null&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;双向链表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#双向链表&#34;&gt;#&lt;/a&gt; 双向链表&lt;/h2&gt;
&lt;p&gt;和单向链表唯有一点不同，一个节点多包含了 &lt;code&gt;prev&lt;/code&gt; ，用于指向上一个节点&lt;/p&gt;
&lt;h2 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;如果忽略查找的过程，链表在插入、删除方面上更为灵活，链表适合用于在尾部频繁插入、删除的情况下&lt;/p&gt;
</content>
        <category term="计算机程序设计" scheme="https://iskoi.github.io/categories/Programming/" />
        <category term="数据结构与算法" scheme="https://iskoi.github.io/categories/Programming/datastructureAlgorithms/" />
        <category term="数据结构" scheme="https://iskoi.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" />
        <updated>2023-02-18T05:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://iskoi.github.io/Programming/datastructureAlgorithms/datastructure1/datastructure1/</id>
        <title>数据结构【介绍篇】</title>
        <link rel="alternate" href="https://iskoi.github.io/Programming/datastructureAlgorithms/datastructure1/datastructure1/"/>
        <content type="html">&lt;h1 id=&#34;物理结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#物理结构&#34;&gt;#&lt;/a&gt; 物理结构&lt;/h1&gt;
&lt;p&gt;存储在内存中的就是物理结构&lt;/p&gt;
&lt;h1 id=&#34;顺序存储结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#顺序存储结构&#34;&gt;#&lt;/a&gt; 顺序存储结构&lt;/h1&gt;
&lt;p&gt;顺序结构是将连续的数据依次存储在连续的内存中&lt;/p&gt;
&lt;h1 id=&#34;链式存储结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链式存储结构&#34;&gt;#&lt;/a&gt; 链式存储结构&lt;/h1&gt;
&lt;p&gt;链式结构是将数据存储在任意的内存中，可以是连续的，也可以是不连续的，每个元素都有指针域和数据域&lt;/p&gt;
&lt;h1 id=&#34;索引存储结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引存储结构&#34;&gt;#&lt;/a&gt; 索引存储结构&lt;/h1&gt;
&lt;p&gt;与链式结构不同的是索引结构没有指针，但创建了索引表存储数据在内存中的地址，对内存消耗大，但查找速度快&lt;/p&gt;
&lt;h1 id=&#34;索引顺序结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引顺序结构&#34;&gt;#&lt;/a&gt; 索引顺序结构&lt;/h1&gt;
&lt;p&gt;每个数据在内存中是连续的&lt;/p&gt;
&lt;h1 id=&#34;散列结构hash-结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#散列结构hash-结构&#34;&gt;#&lt;/a&gt; 散列结构（hash 结构）&lt;/h1&gt;
&lt;p&gt;通过计算决定数据在内存中的位置&lt;/p&gt;
&lt;h1 id=&#34;逻辑结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑结构&#34;&gt;#&lt;/a&gt; 逻辑结构&lt;/h1&gt;
&lt;p&gt;逻辑结构就是数据之间的关系，一个逻辑结构可以用两种以上的物理结构实现&lt;/p&gt;
&lt;h1 id=&#34;线性结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线性结构&#34;&gt;#&lt;/a&gt; 线性结构&lt;/h1&gt;
&lt;p&gt;有唯一的首、尾元素，除了首、尾元素，其他元素都是首尾相接的，是一对一的关系，容易遍历，比如栈、队列、双队列、循环队列、一维数组等&lt;/p&gt;
&lt;h1 id=&#34;非线性结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非线性结构&#34;&gt;#&lt;/a&gt; 非线性结构&lt;/h1&gt;
&lt;p&gt;非线性结构是一对多或者多对一的关系，需要多次运行才能完全遍历，比如二维数组、多维数组、广义表、树、二叉树等&lt;/p&gt;
&lt;h1 id=&#34;集合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合&#34;&gt;#&lt;/a&gt; 集合&lt;/h1&gt;
&lt;p&gt;各个数据之间没有任何关系&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;逻辑结构是面向问题的，物理结构是面向计算机的，其目的是将数据及其逻辑关系存储在内存中&lt;/p&gt;
</content>
        <category term="计算机程序设计" scheme="https://iskoi.github.io/categories/Programming/" />
        <category term="数据结构与算法" scheme="https://iskoi.github.io/categories/Programming/datastructureAlgorithms/" />
        <category term="数据结构" scheme="https://iskoi.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" />
        <updated>2023-02-18T04:00:00.000Z</updated>
    </entry>
</feed>
